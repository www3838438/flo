package {{packageName}};

import java.io.Serializable;
import java.util.List;
import java.util.function.BiFunction;
import java.util.function.Function;
import java.util.function.Supplier;

import javax.annotation.Generated;

import com.spotify.flo.EvalContext.Value;

/**
 * Types for the fluent task setup API
 *
 * The entry point for this api is {@link Task#named(String, Object...)}}.
 *
 * Note, the inner types should never have to explicitly be mentioned or imported. The API is
 * supposed to be used through fluent calls that eventually lead to a {@link Task} instance.
 */
@Generated("com.spotify.flo.gen.ApiGeneratorProcessor")
public interface {{interfaceName}}<Z> {

  Task<Z> process(F0<Z> code);
  Task<Z> processWithContext(F1<EvalContext, EvalContext.Value<Z>> code);

  <A> {{interfaceName}}1<A, Z> context(TaskContextGeneric<A> taskContextGeneric);
  <A> {{interfaceName}}1<A, Z> context(TaskContextStrict<A, Z> taskContextStrict);

  <A> {{interfaceName}}1<A, Z> in(Fn<Task<A>> task);
  <A> {{interfaceName}}1<A, Z> input(Fn<Task<A>> task);
  <A> {{interfaceName}}1<List<A>, Z> ins(Fn<List<Task<A>>> tasks);
  <A> {{interfaceName}}1<List<A>, Z> inputs(Fn<List<Task<A>>> tasks);
{{#genBuilder}}

  interface {{interfaceName}}{{arity}}<{{typeArgs}}, Z> {
    Task<Z> process(F{{arity}}<{{typeArgs}}, Z> code);
    Task<Z> processWithContext(F{{arityPlus}}<EvalContext, {{typeArgs}}, Value<Z>> code);
  {{^iter.isLast}}

    <{{nextArg}}> {{interfaceName}}{{arityPlus}}<{{typeArgs}}, {{nextArg}}, Z> context(TaskContextGeneric<{{nextArg}}> taskContextGeneric);
    <{{nextArg}}> {{interfaceName}}{{arityPlus}}<{{typeArgs}}, {{nextArg}}, Z> context(TaskContextStrict<{{nextArg}}, Z> taskContextStrict);

    <{{nextArg}}> {{interfaceName}}{{arityPlus}}<{{typeArgs}}, {{nextArg}}, Z> in(Fn<Task<{{nextArg}}>> task);
    <{{nextArg}}> {{interfaceName}}{{arityPlus}}<{{typeArgs}}, {{nextArg}}, Z> input(Fn<Task<{{nextArg}}>> task);
    <{{nextArg}}> {{interfaceName}}{{arityPlus}}<{{typeArgs}}, List<{{nextArg}}>, Z> ins(Fn<List<Task<{{nextArg}}>>> tasks);
    <{{nextArg}}> {{interfaceName}}{{arityPlus}}<{{typeArgs}}, List<{{nextArg}}>, Z> inputs(Fn<List<Task<{{nextArg}}>>> tasks);
  {{/iter.isLast}}
  }
{{/genBuilder}}
{{#genFn}}

  {{#iter.isFirst}}
  @FunctionalInterface
  interface F{{arity}}<Z> extends {{{jdkInterface}}}Serializable {
    Z get();
  }
  {{/iter.isFirst}}
  {{^iter.isFirst}}
  @FunctionalInterface
  interface F{{arity}}<{{typeArgs}}, Z> extends {{{jdkInterface}}}Serializable {
    Z apply({{parameters}});
  }
  {{/iter.isFirst}}
{{/genFn}}
}
